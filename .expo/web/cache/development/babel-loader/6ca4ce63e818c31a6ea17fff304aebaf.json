{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\foodopedia\\\\src\\\\screens\\\\searchScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SearchBar from \"../Components/SearchBar\";\nimport yelp from \"../api/yelp\";\n\nvar searchScreen = function searchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var searchApi = function searchApi() {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: term,\n                location: 'san jose'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage(\"Something went wrong!\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: searchApi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, term), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"We have found \", results.length, \" results\"));\n};\n\nvar styles = StyleSheet.create({});\nexport default searchScreen;","map":{"version":3,"sources":["C:/Users/hp/Desktop/foodopedia/src/screens/searchScreen.js"],"names":["React","useState","SearchBar","yelp","searchScreen","term","setTerm","results","setResults","searchApi","get","params","limit","location","response","data","businesses","setErrorMessage","length","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MAChBI,IADgB;AAAA,MACXC,OADW;;AAAA,mBAEML,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,MAEhBM,OAFgB;AAAA,MAERC,UAFQ;;AAGvB,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaN,IAAI,CAACO,GAAL,CAAS,SAAT,EAAmB;AACtCC,cAAAA,MAAM,EAAC;AACHC,gBAAAA,KAAK,EAAC,EADH;AAEHP,gBAAAA,IAAI,EAAJA,IAFG;AAGHQ,gBAAAA,QAAQ,EAAE;AAHP;AAD+B,aAAnB,CAFb;;AAAA;AAEJC,YAAAA,QAFI;AASVN,YAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AATU;AAAA;;AAAA;AAAA;AAAA;AAWVC,YAAAA,eAAe,CAAC,uBAAD,CAAf;;AAXU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAgBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAEZ,IADN;AAEA,IAAA,YAAY,EAAEC,OAFd;AAGA,IAAA,YAAY,EAAEG,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAP,CANJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBE,OAAO,CAACW,MAA7B,aAPJ,CADJ;AAWH,CA9BD;;AAgCA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAejB,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {View,Text,StyleSheet,Button} from 'react-native';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport yelp from '../api/yelp';\r\nconst searchScreen = () => {\r\n    const [term,setTerm] = useState('');\r\n    const [results,setResults] = useState([]);\r\n    const searchApi = async () => {\r\n        try {\r\n            const response = await yelp.get('/search',{\r\n                params:{\r\n                    limit:50,\r\n                    term,\r\n                    location: 'san jose'\r\n                }\r\n            });\r\n            setResults(response.data.businesses);\r\n        } catch (error) {\r\n            setErrorMessage(\"Something went wrong!\");\r\n            \r\n        }\r\n        \r\n    };\r\n    return (\r\n        <View>\r\n            <SearchBar \r\n            term={term} \r\n            onTermChange={setTerm}\r\n            onTermSubmit={searchApi}\r\n            />\r\n            <Text>{term}</Text>\r\n            <Text>We have found {results.length} results</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default searchScreen;"]},"metadata":{},"sourceType":"module"}